#!/bin/bash

# Check if application is run as root
if [ "$EUID" -ne 0 ]
  then echo "Please run application as root"
  exit
fi

# Check if /opt/vdtg-rmm application folder exists else stop code execution
if [ -d "/opt/vdtg-rmm" ]
then

    # Move to vdtg-rmm application folder
    cd /opt/vdtg-rmm

    # Check if daemon file is executable
    if [ ! -x /opt/vdtg-rmm/vdtg-rmm-daemon ]
    then
        # Make vdtg-rmm daemon executable
        chmod +x /opt/vdtg-rmm/vdtg-rmm-daemon
    fi

    # Add vdtg-rmm-daemon to crontab
    if ! crontab -l | grep -q '/opt/vdtg-rmm/vdtg-rmm-daemon'
    then
        # Add vdtg-rmm-daemon to crontab and run every day at 06:00
        (crontab -l ; echo "0 6 * * * /opt/vdtg-rmm/vdtg-rmm-daemon") | crontab -
    fi

    # Check if config file exists, if not copy example config file, else check if all config values are set or copy missing values from example config file
    if [ ! -f /opt/vdtg-rmm/vdtg-rmm.config ]
    then
        # Copy example config file to /opt/vdtg-rmm
        cp /opt/vdtg-rmm/vdtg-rmm.config.example /opt/vdtg-rmm/vdtg-rmm.config
    else
        # Check if all config values are set, if not copy missing values from example config file
        while IFS= read -r line
        do
            # Check if line is not a comment
            if [[ ! $line == \#* ]]
            then
                # Check if line is not empty
                if [ ! -z "$line" ]
                then
                    # Get key from line
                    key=$(echo $line | awk -F'=' '{print $1}')

                    # Get value from line
                    value=$(echo $line | awk -F'=' '{print $2}')

                    # Check if value is empty
                    if [ -z "$value" ]
                    then
                        # Get value from example config file
                        default_value=$(grep -v '^#' /opt/vdtg-rmm/vdtg-rmm.config.example | grep -i $key | awk -F'=' '{print $2}')

                        # Add key and value to config file
                        sed -i "s/$key=/$key=$default_value/g" /opt/vdtg-rmm/vdtg-rmm.config
                    fi
                fi
            fi
        done < /opt/vdtg-rmm/vdtg-rmm.config
    fi

    # Check if file /opt/vdtg-rmm/ubuntu.sources is different from /etc/apt/sources.list.d/ubuntu.sources
    if ! cmp -s /opt/vdtg-rmm/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources
    then

        # Backup current ubuntu.sources to ubuntu.sources.bak.current date
        mv /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources.bak.$(date +%Y%m%d%H%M%S)

        # Copy VDTG Mirror ubuntu.sources to /etc/apt/sources.list.d
        cp /opt/vdtg-rmm/ubuntu.sources /etc/apt/sources.list.d/ubuntu.sources

    fi

    # Clear the apt cache.
    apt clean

    # Update packages
    apt update

    # Install package updates
    apt upgrade -y

    # Check if git is installed
    if ! dpkg -l | grep -q git
    then
        # Install git
        apt install -y git
    fi

    # Check if net-tools is installed
    if ! dpkg -l | grep -q net-tools
    then
        # Install net-tools
        apt install -y net-tools
    fi

    # Get locale from vdtg-rmm.config file ignore all lines starting with '#' because they are comments
    locale=$(grep -v '^#' /opt/vdtg-rmm/vdtg-rmm.config | grep -i 'locale' | awk -F'=' '{print $2}')

    # Check if language-pack-$locale is installed
    if ! dpkg -l | grep -q language-pack-$locale
    then
        # Install language-pack-$locale
        apt install -y language-pack-$locale
    fi

    # If locale is nl then set local to Dutch
    if [ "$locale" == "nl" ]
    then
        # Set local to Dutch
        update-locale LANG=nl_NL.utf-8 LC_MESSAGES=POSIX
    fi

    # Get install_dnsmasq from vdtg-rmm.config file ignore all lines starting with '#' because they are comments
    install_dnsmasq=$(grep -v '^#' /opt/vdtg-rmm/vdtg-rmm.config | grep -i 'install_dnsmasq' | awk -F'=' '{print $2}')

    # Check if install dnsmasq is true
    if [ "$install_dnsmasq" == "true" ]
    then
        # Check if dnsmasq is installed
        if ! dpkg -l | grep -q dnsmasq
        then

            # Disable systemd-resolved
            systemctl stop systemd-resolved
            systemctl disable systemd-resolved
    
            # Install dnsmasq
            apt install -y dnsmasq

        fi
    fi

else
    echo "Application not installed at /opt/vdtg-rmm. Please install application in the correct folder."
    exit
fi
